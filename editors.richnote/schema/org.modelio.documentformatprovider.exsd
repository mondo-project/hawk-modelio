<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.modelio.core" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="org.modelio.core" id="org.modelio.documentformatprovider" name="Document format provider"/>
      </appinfo>
      <documentation>
         Extension point for document format providers.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
         <documentation>
            Extension point for extern document editor providers.
         </documentation>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="provider"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="provider">
      <annotation>
         <documentation>
            A document provider.
         </documentation>
      </annotation>
      <complexType>
         <sequence minOccurs="0" maxOccurs="unbounded">
            <element ref="format"/>
         </sequence>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The class providing the document editor provider.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":com.modeliosoft.modelio.edition.extern.editors.IExternDocumentEditorProvider"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="format">
      <annotation>
         <documentation>
            Describes a supported document format.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="mime" type="string" use="required">
            <annotation>
               <documentation>
                  Document MIME type.
               </documentation>
               <appinfo>
                  <meta.attribute kind="identifier"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="label" type="string">
            <annotation>
               <documentation>
                  A translatable label.
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="support" use="default" value="native">
            <annotation>
               <documentation>
                  Support level of the format:
- &apos;native&apos; : the format is supported natively
- &apos;alternate&apos; : the editor can be used as a fallback if no editor supports this format natively.

Default is native.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="native">
                  </enumeration>
                  <enumeration value="alternate">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="extensions" type="string">
            <annotation>
               <documentation>
                  an optional field containing the list of file types understood by the editor. This is a string containing  comma separate file extensions. For instance, an editor which understands hypertext documents may register for &quot;htm, html&quot;.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="data" type="string">
            <annotation>
               <documentation>
                  Implementation dependent data.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="icon" type="string">
            <annotation>
               <documentation>
                  Browser icon path.
               </documentation>
               <appinfo>
                  <meta.attribute kind="resource"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         [Enter the first release in which this extension point appears.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>


</schema>
