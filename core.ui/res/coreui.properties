AuthDataPanel.scheme.NoneAuthData         = None
AuthDataPanel.scheme.UserPasswordAuthData = User + password
AuthDataPanel.scheme.label                = Type

InformationFlowConveyedelements = Conveyed elements
InformationItemRepresentedelements = Represented classifiers
InterruptibleActivityRegionInterruptingEdgeelements = Interrupting edges

KTable.AcceptedType           = Accepted type: 
KTable.AcceptedTypes          = Accepted types:
KTable.AnyStringValue         = Any string value
KTable.ChoosenElements        = Chosen elements:
KTable.EnterParameterHere     = <Enter parameter here>
KTable.HybridCellEditorTootip = Enter: Input validation.\nCtrl+Space: Auto-completion.\nLeft click: Choose an element.
KTable.HybridNotFoundMessage  = No element of compatible type and name with the input string has been found for this field.
KTable.HybridNotFoundTitle    = Element not found
KTable.MultipleInputHelp      = Search for elements by regular expression or drag and drop them in the chosen elements field.
KTable.MultipleTextInputHelp  = Edit the content of a property, containing a multiline text.
KTable.NoBase                 = <no base>
KTable.NoName                 = <no name>
KTable.NoType                 = <no type>
KTable.NoValue                = <no value>
KTable.None                   = None
KTable.Pattern                = Filter: 
KTable.Search                 = Search
KTable.SearchResults          = Search results:

MovingFailed = Move failed

NoType = <no type>

ProvidedInterfaceProvidedElementelements = Provided interfaces
RequiredInterfaceRequiredElementelements = Required interfaces

ResultsProposalPopup.From        = (from ''{0}'')
ResultsProposalPopup.None        = None
ResultsProposalPopup.choose      = Choose ({0} items)
ResultsProposalPopup.description = ESC to cancel, double click to validate
ResultsProposalPopup.title       = Choose

TextWrapper.AcceptedType           = Accepted type: 
TextWrapper.AcceptedTypes          = Accepted types:
TextWrapper.HybridCellEditorTootip = Enter: Input validation.\nCtrl+Space: Auto-completion.\nLeft click: Choose an element.
TextWrapper.HybridNotFoundMessage  = No element of compatible type and name with the input string has been found for this field.
TextWrapper.HybridNotFoundTitle    = Element not found

TextElement.AcceptedTypes          = Accepted type(s) 
TextElement.CompletionUsage        = Enter: Input validation.\nCtrl+Space: Auto-completion.\nLeft click: Choose an element.
TextElement.NotFoundMessage  = No element of compatible type and name with the input string has been found for this field.
TextElement.NotFoundTitle    = Element not found


TreeTable.BOLDITALIC_FONTSTYLE.label = italic bold
TreeTable.BOLD_FONTSTYLE.label       = bold
TreeTable.ITALIC_FONTSTYLE.label     = italic
TreeTable.NORMAL_FONTSTYLE.label     = normal

ExceptionHandlerExceptionTypeelements = Handled exceptions

UseCaseDependencyExtensionLocationelements = Extension Points

QueryDefinitionAddedelements = Added elements

UserPasswordDataUi.memorize.label   = Memorize login + password
UserPasswordDataUi.memorize.tooltip = Check this box to memorize the login and password so they are automatically used.\r\nWhen security is the main concern this option is NOT recommended.
UserPasswordDataUi.password.label   = Password:
UserPasswordDataUi.user.label       = Login:

causeanalyzer.main_label           = ''{0}'' depends on ''{1}'' for the following reasons:
causeanalyzer.message              = click on an element to select it in the main browser.
causeanalyzer.shelltext            = Namespace use causes analysis
causeanalyzer.title                = Namespace use causes analysis

causeanalyzer.association_role          = The ''{0}'' association targets ''{1}''.
causeanalyzer.attribute                 = The ''{0}'' attribute is typed by ''{1}''.
causeanalyzer.bindableinstance          = The ''{0}'' instance is typed by ''{1}''.
causeanalyzer.binding                   = The ''{0}'' collaboration use binds the {1} {2} to the ''{3}' role.
causeanalyzer.connectorend              = The ''{0}'' connector targets ''{1}''.
causeanalyzer.connectorend.model        = The {0}.{1} connector instantiates the {2}.{3} association.
causeanalyzer.dependency.flow           = ''{0}'' has an information flow towards ''{1}''.
causeanalyzer.dependency.none           = ''{0}'' has a dependency towards ''{1}''.
causeanalyzer.dependency.trace          = ''{0}'' has a traceability towards ''{1}''.
causeanalyzer.element_import            = ''{0}'' imports ''{1}''.
causeanalyzer.generalization            = ''{0}'' inherits from ''{1}''.
causeanalyzer.informationflow           = The {0}.{1} information flow flows from '{'{0}'}' to '{'{1}'}'.
causeanalyzer.informationitem           = The ''{0}'' information item represents the '{'{1}'}' classifiers.
causeanalyzer.instance                  = The ''{0}'' instance is typed by ''{1}''.
causeanalyzer.interfacerealization      = ''{0}'' implements ''{1}''.
causeanalyzer.io_parameter              = The ''{0}'' operation has ''{1}'' parameter typed by ''{2}''.
causeanalyzer.linkend                   = The ''{0}'' link targets ''{1}''.
causeanalyzer.linkend.model             = The {0}.{1} link instantiates the {2}.{3} association.
causeanalyzer.manifestation             = ''{0}'' manifests ''{1}''.
causeanalyzer.namespaceuse              = ''{1}'' ({0}) uses ''{2}'' ({3}):
causeanalyzer.objectnode.type           = The ''{0}'' object node is typed by ''{1}''.
causeanalyzer.objectnode.represents     = The ''{0}'' object node represents the {1} {2}.
causeanalyzer.packageimport             = ''{0}'' imports the ''{1}'' package.
causeanalyzer.packagemerge              = ''{1}'' is merged into ''{0}''.
causeanalyzer.raisedexception           = The ''{0}'' operation throws the ''{1}'' exception.
causeanalyzer.return_parameter          = The ''{0}'' operation returns a ''{1}''.
causeanalyzer.templatebinding           = ''{1}'' instanciate (template) ''{0}''.
causeanalyzer.unknowncause              = {0} {1}.
causeanalyzer.usage                     = ''{0}'' has a usage towards ''{1}''.
causeanalyzer.usecasedependency.extend  = The ''{0}'' use case extends the ''{1}'' use case.
causeanalyzer.usecasedependency.include = The ''{0}'' use case includes the ''{1}'' use case.